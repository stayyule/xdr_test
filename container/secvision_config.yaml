# kali 1
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    vendor: secvision
    app: kali
    role: verify-src
  name: verify-src-pod
  namespace: secvision
spec:
  containers:
  - image: 172.28.236.251:5000/secvision/kali:3.15
    name: verify-src-pod
    resources: {}
    env:
    - name: CODE
      valueFrom:
        configMapKeyRef:
          name: secvision-cm
          key: verify-src-code
    - name: SERVER_HOST
      valueFrom:
        configMapKeyRef:
          name: secvision-cm
          key: secvision-server
  dnsPolicy: ClusterFirst
  restartPolicy: Always

---
# kali 2
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    vendor: secvision
    app: kali
    role: verify-dst
  name: verify-dst-pod
  namespace: secvision
spec:
  containers:
  - image: 172.28.236.251:5000/secvision/kali:3.15
    name: verify-dst-pod
    resources: {}
    env:
    - name: CODE
      valueFrom:
        configMapKeyRef:
          name: secvision-cm
          key: verify-dst-code
    - name: SERVER_HOST
      valueFrom:
        configMapKeyRef:
          name: secvision-cm
          key: secvision-server
  dnsPolicy: ClusterFirst
  restartPolicy: Always
---
# kali 3
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    vendor: secvision
    app: kali
    role: verify-dst
  name: verify-shell-pod
  namespace: secvision
spec:
  containers:
  - image: 172.28.236.251:5000/secvision/kali:3.15
    name: verify-shell-pod
    resources: {}
    env:
    - name: CODE
      valueFrom:
        configMapKeyRef:
          name: secvision-cm
          key: verify-shell-code
    - name: SERVER_HOST
      valueFrom:
        configMapKeyRef:
          name: secvision-cm
          key: secvision-server
  dnsPolicy: ClusterFirst
  restartPolicy: Always

---
# shiro
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    vendor: secvision
    app: poc
    case: poc-shiro
  name: poc-shiro-dep
  namespace: secvision
spec:
  replicas: 1
  selector:
    matchLabels:
      case: poc-shiro

  template:
    metadata:
      labels:
        case: poc-shiro
    spec:
      containers:
      - image: 172.28.236.251:5000/secvision/shiro:v3.0.0-memory
        name: shiro
        ports:
        - containerPort: 8080

---
# shiro-svc
apiVersion: v1
kind: Service
metadata:
  name: shiro-svc
  namespace: secvision
  labels:
    vendor: secvision
    app: poc
    case: poc-shiro
spec:
  selector:
    case: poc-shiro

  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
      nodePort: 30080

  type: NodePort

---
# php-upload
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    vendor: secvision
    app: poc
    case: poc-php-upload
  name: poc-php-upload-dep
  namespace: secvision
spec:
  replicas: 1
  selector:
    matchLabels:
      case: poc-php-upload

  template:
    metadata:
      labels:
        case: poc-php-upload
    spec:
      containers:
      - image: 172.28.236.251:5000/secvision/upload-labs:v3.0.0
        name: php-upload
        ports:
        - containerPort: 80

---
# php-upload-svc
apiVersion: v1
kind: Service
metadata:
  name: php-upload-svc
  namespace: secvision
  labels:
    vendor: secvision
    app: poc
    case: poc-php-upload
spec:
  selector:
    case: poc-php-upload

  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
      nodePort: 30081

  type: NodePort

---
# jsp-upload
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    vendor: secvision
    app: poc
    case: poc-jsp-upload
  name: poc-jsp-upload-dep
  namespace: secvision
spec:
  replicas: 1
  selector:
    matchLabels:
      case: poc-jsp-upload

  template:
    metadata:
      labels:
        case: poc-jsp-upload
    spec:
      containers:
      - image: 172.28.236.251:5000/secvision/tomcat:v3.0.0-8.5-jre8
        name: jsp-upload
        ports:
        - containerPort: 8080

---
# jsp-upload-svc
apiVersion: v1
kind: Service
metadata:
  name: jsp-upload-svc
  namespace: secvision
  labels:
    vendor: secvision
    app: poc
    case: poc-jsp-upload
spec:
  selector:
    case: poc-jsp-upload

  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
      nodePort: 30082

  type: NodePort

---
# rce-mysql
apiVersion: apps/v1
kind: Deployment
metadata:
  name: poc-rce-mysql-dep
  labels:
    vendor: secvision
    app: poc
    case: poc-rce-mysql
  namespace: secvision
spec:
  replicas: 1
  selector:
    matchLabels:
      case: poc-rce-mysql
  template:
    metadata:
      labels:
        case: poc-rce-mysql
    spec:
      containers:
        - name: rce-mysql
          image: 172.28.236.251:5000/secvision/javasec-mysql:v3.0.0
          ports:
          - containerPort: 3306
          env:
            - name: MYSQL_DATABASE
              value: test
            - name: MYSQL_ROOT_PASSWORD
              value: woaini520
            - name: MYSQL_ROOT_HOST
              value: '%'

---
# rce-mysql-svc
apiVersion: v1
kind: Service
metadata:
  name: mysql-svc
  labels:
    vendor: secvision
    app: poc
    case: poc-rce-mysql
  namespace: secvision
spec:
  selector:
    case: poc-rce-mysql

  ports:
    - port: 3306
      targetPort: 3306
      protocol: TCP

---
# rce
apiVersion: apps/v1
kind: Deployment
metadata:
  name: poc-rce-dep
  labels:
    vendor: secvision
    app: poc
    case: poc-rce
  namespace: secvision
spec:
  replicas: 1
  selector:
    matchLabels:
      case: poc-rce
  template:
    metadata:
      labels:
        case: poc-rce
    spec:
      containers:
        - name: rce
          image: 172.28.236.251:5000/secvision/javasec:v3.0.2
          ports:
          - containerPort: 8083
          env:
          - name: MYSQL_IP
            value: mysql-svc
---
# rce-svc
apiVersion: v1
kind: Service
metadata:
  name: rce-svc
  namespace: secvision
  labels:
    vendor: secvision
    app: poc
    case: poc-rce
spec:
  selector:
    case: poc-rce

  ports:
    - port: 80
      targetPort: 8083
      protocol: TCP
      nodePort: 30083

  type: NodePort


---
# jboss cve-2017-7504
apiVersion: apps/v1
kind: Deployment
metadata:
  name: poc-jboss-cve-2017-7504-dep
  labels:
    vendor: secvision
    app: poc
    case: poc-jboss-cve-2017-7504
  namespace: secvision
spec:
  replicas: 1
  selector:
    matchLabels:
      case: poc-jboss-cve-2017-7504
  template:
    metadata:
      labels:
        case: poc-jboss-cve-2017-7504
    spec:
      containers:
        - name: jboss-cve-2017-7504
          image: 172.28.236.251:5000/secvision/jboss:v3.0.0-cve-2017-7504
          ports:
          - containerPort: 8080

---
# jboss-cve-2017-7504-svc
apiVersion: v1
kind: Service
metadata:
  name: jboss-cve-2017-7504-svc
  namespace: secvision
  labels:
    vendor: secvision
    app: poc
    case: poc-jboss-cve-2017-7504
spec:
  selector:
    case: poc-jboss-cve-2017-7504

  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
      nodePort: 30084

  type: NodePort


---
# jboss cve-2017-12149
apiVersion: apps/v1
kind: Deployment
metadata:
  name: poc-jboss-cve-2017-12149-dep
  labels:
    vendor: secvision
    app: poc
    case: poc-jboss-cve-2017-12149
  namespace: secvision
spec:
  replicas: 1
  selector:
    matchLabels:
      case: poc-jboss-cve-2017-12149
  template:
    metadata:
      labels:
        case: poc-jboss-cve-2017-12149
    spec:
      containers:
        - name: jboss-cve-2017-12149
          image: 172.28.236.251:5000/secvision/jboss:v3.0.0-cve-2017-12149
          ports:
          - containerPort: 8080

---
# jboss-cve-2017-12149-svc
apiVersion: v1
kind: Service
metadata:
  name: jboss-cve-2017-12149-svc
  namespace: secvision
  labels:
    vendor: secvision
    app: poc
    case: poc-jboss-cve-2017-12149
spec:
  selector:
    case: poc-jboss-cve-2017-12149

  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
      nodePort: 30085

  type: NodePort


---
# jetty
apiVersion: apps/v1
kind: Deployment
metadata:
  name: poc-jetty-dep
  labels:
    vendor: secvision
    app: poc
    case: poc-jetty
  namespace: secvision
spec:
  replicas: 1
  selector:
    matchLabels:
      case: poc-jetty
  template:
    metadata:
      labels:
        case: poc-jetty
    spec:
      containers:
        - name: jetty
          image: 172.28.236.251:5000/secvision/jetty:v3.0.0-9.4-filter-memory-webshell
          ports:
          - containerPort: 8080

---
# jetty-svc
apiVersion: v1
kind: Service
metadata:
  name: jetty-svc
  namespace: secvision
  labels:
    vendor: secvision
    app: poc
    case: poc-jetty
spec:
  selector:
    case: poc-jetty

  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
      nodePort: 30086

  type: NodePort


---
# websphere
apiVersion: apps/v1
kind: Deployment
metadata:
  name: poc-websphere-dep
  labels:
    vendor: secvision
    app: poc
    case: poc-websphere
  namespace: secvision
spec:
  replicas: 1
  selector:
    matchLabels:
      case: poc-websphere
  template:
    metadata:
      labels:
        case: poc-websphere
    spec:
      containers:
        - name: websphere
          image: 172.28.236.251:5000/secvision/websphere:v3.0.0-filter-memory-webshell
          ports:
          - containerPort: 9443

---
# websphere-svc
apiVersion: v1
kind: Service
metadata:
  name: websphere-svc
  namespace: secvision
  labels:
    vendor: secvision
    app: poc
    case: poc-websphere
spec:
  selector:
    case: poc-websphere

  ports:
    - port: 80
      targetPort: 9443
      protocol: TCP
      nodePort: 30087

  type: NodePort

---
# shiro-privileged
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    vendor: secvision
    app: poc
    case: poc-shiro-privileged
  name: poc-shiro-privileged-dep
  namespace: secvision
spec:
  replicas: 1
  selector:
    matchLabels:
      case: poc-shiro-privileged

  template:
    metadata:
      labels:
        case: poc-shiro-privileged
    spec:
      containers:
      - image: 172.28.236.251:5000/secvision/shiro:v3.0.0-memory
        name: shiro-privileged
        securityContext:
          privileged: true
        ports:
        - containerPort: 8080

---
# shiro-privileged-svc
apiVersion: v1
kind: Service
metadata:
  name: shiro-privileged-svc
  namespace: secvision
  labels:
    vendor: secvision
    app: poc
    case: poc-shiro-privileged
spec:
  selector:
    case: poc-shiro-privileged

  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
      nodePort: 31888

  type: NodePort
