apiVersion: v1
kind: Namespace
metadata:
  name: vulhub
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-vulhub-tmp
spec:
  capacity:
    storage: 100Gi
  volumeMode: Filesystem
  storageClassName: slow
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /tmp
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-vulhub-tmp
  namespace: vulhub
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi
  storageClassName: slow
  volumeName: pv-vulhub-tmp
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-vulhub
spec:
  capacity:
    storage: 100Gi
  volumeMode: Filesystem
  storageClassName: slow
  accessModes:
    - ReadWriteOnce
  hostPath:
    # 宿主机地址
    path: /opt/nfs
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-vulhub
  namespace: vulhub
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi
  storageClassName: slow
  volumeName: pv-vulhub
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: docker
  namespace: vulhub
spec:
  replicas: 1
  serviceName: docker
  selector:
    matchLabels:
      app: docker
  template:
    metadata:
      labels:
        app: docker
    spec:
      containers:
        - name: docker
          image: docker.io/library/docker:latest
          imagePullPolicy: IfNotPresent
          ports:
          - containerPort: 2375
            name: docker-api
          - containerPort: 80
            name: web
          volumeMounts:
          - name: docker-cache
            mountPath: /etc/docker
            subPath: data/vulhub/docker/etc
          - name: docker-cache
            mountPath: /var/lib/docker
            subPath: data/vulhub/docker/var
          - name: docker-tmp-cache
            mountPath: /tmp
          env:
          - name: DOCKER_TLS_CERTDIR
            value: ""
          args:
            - --tls=false
            - --insecure-registry
            - registry.secvision.cloud:8443
          securityContext:
            privileged: true
      volumes:
      - name: docker-cache
        persistentVolumeClaim:
          claimName: pvc-vulhub
      - name: docker-tmp-cache
        persistentVolumeClaim:
          claimName: pvc-vulhub-tmp
---
apiVersion: v1
kind: Service
metadata:
  name: docker
  namespace: vulhub
  labels:
    app: docker
spec:
  selector:
    app: docker
  ports:
  - port: 2375
    targetPort: 2375
    name: docker-api
  - port: 80
    targetPort: 80
    name: docker-web
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: vulhub
  namespace: vulhub
spec:
  replicas: 1
  serviceName: vulhub
  selector:
    matchLabels:
      app: vulhub
  template:
    metadata:
      labels:
        app: vulhub
    spec:
      containers:
        - name: vulhub
          image: harbor.secvision.local/verify/vulhub:latest
          imagePullPolicy: IfNotPresent
          ports:
          - containerPort: 58080
          volumeMounts:
          - name: vulhub-data
            mountPath: /opt/apps/secvision
            subPath: data/vulhub/data
          command: ["./entrypoint.sh"]
          args:
            - -docker-host
            - tcp://docker:2375
            - -m
            # 主控地址
            - https://100000.secvision.cloud
            - -c
            # 注册code
            - xxxx-xxxx-xxxxx
          securityContext:
            privileged: true
      volumes:
      - name: vulhub-data
        persistentVolumeClaim:
          claimName: pvc-vulhub
---
apiVersion: v1
kind: Service
metadata:
  name: vulhub
  namespace: vulhub
  labels:
    app: vulhub
spec:
  ports:
  - port: 80
    targetPort: 58080
  selector:
    app: vulhub